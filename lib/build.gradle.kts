/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

import org.jetbrains.dokka.base.DokkaBase
import org.jetbrains.dokka.base.DokkaBaseConfiguration
import org.jetbrains.dokka.gradle.DokkaTask

buildscript {
  dependencies {
    classpath("org.jetbrains.dokka:dokka-base:1.8.20")
  }
}

//
// Plugins
//
plugins {
  java
  idea
  `java-library`
  id("org.jetbrains.kotlin.jvm") version "1.8.21"
  id("com.github.ben-manes.versions") version "0.46.0"
  id("org.barfuin.gradle.taskinfo") version "2.1.0"
}

// Repositories for Library Dependencies
repositories {
  mavenCentral()
}

// Library Dependencies
dependencies {

  // These dependencies are exported to consumers, that is to say found on their compile classpath.
//  api("org.apache.commons:commons-math3:3.6.1")

  api(group = "com.squareup.okhttp3", name = "okhttp", version = "4.11.0")

  // These dependencies are used internally, and not exposed to consumers on their own compile classpath.
//  implementation("com.google.guava:guava:31.1-jre")

  // Other
  implementation(group = "io.github.nefilim.kjwt", name="kJWT", version="0.1.6")
  implementation(group = "io.arrow-kt", name = "arrow-core", version = "1.1.5")
  implementation(group = "com.auth0", name = "java-jwt", version = "4.4.0")
  implementation(group = "com.squareup.moshi", name = "moshi", version = "1.14.0")
  implementation(group = "com.squareup.moshi", name = "moshi-adapters", version = "1.14.0")
  implementation(group = "com.squareup.moshi", name = "moshi-kotlin", version = "1.14.0")

  // Logging
  implementation(group = "io.github.microutils", name = "kotlin-logging-jvm", version = "3.0.5")
  implementation(group = "ch.qos.logback", name = "logback-classic", version = "1.4.7")


  // Testing
  testImplementation(group = "org.junit.jupiter", name = "junit-jupiter", version="5.7.1")
  testImplementation(group = "com.willowtreeapps.assertk", name = "assertk", version = "0.26.1")
  testImplementation(group = "com.squareup.okhttp3", name="mockwebserver", version = "4.11.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
    vendor.set(JvmVendorSpec.AZUL)
  }
}

//
// Set up various Properties and Constants used by the build script
//

// Application Properties
val author: String by project
val company: String by project


//
// Configure Testing
//
tasks.named<Test>("test") {
  useJUnitPlatform()
}

tasks.withType<DokkaTask>().configureEach {
  dokkaSourceSets {
    configureEach {
      includeNonPublic.set(true)
      jdkVersion.set(11)
    }
  }
}

tasks.dokkaHtml {
  pluginConfiguration<DokkaBase, DokkaBaseConfiguration> {
    footerMessage = "(c) 2023 Ewert Technologies"
  }

}


/**
 * Displays general build info, such as versions, key directory locations, etc.
 */
tasks.register("buildInfo") {
  group = "help"
  description = "Displays general build info, such as versions, etc."

  logger.quiet("Project: ${project.name} - ${project.description}")
  logger.quiet("Project version: ${project.version}")
  logger.quiet("Author: $author")
  logger.quiet("Company: $company")
}


